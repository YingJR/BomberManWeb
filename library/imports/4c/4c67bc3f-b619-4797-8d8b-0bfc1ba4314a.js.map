{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n            id: 0,\r\n            velocity: 2,//Moving speed\r\n            bombsMax: 1,//Max number of bombs user can spawn\r\n            bombStrength: 1,//How far the fire reaches when bomb explodes\r\n            alive: 0,\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n\r\n    },\r\n    \r\n\r\n\r\n\r\n    init: function(position, controls, id) {\r\n        if (id) {\r\n            this.id = id;\r\n        }\r\n\r\n        if (controls) {\r\n            this.controls = controls;\r\n        }\r\n\r\n        var img = gGameEngine.playerBoyImg;\r\n        if (!(this instanceof Bot)) {\r\n            if (this.id == 0) {\r\n                img = gGameEngine.playerGirlImg;\r\n            } else {\r\n                img = gGameEngine.playerGirl2Img;\r\n            }\r\n        }\r\n\r\n        var spriteSheet = new createjs.SpriteSheet({\r\n            images: [img],\r\n            frames: { width: this.size.w, height: this.size.h, regX: 10, regY: 12 },\r\n            animations: {\r\n                idle: [0, 0, 'idle'],\r\n                down: [0, 3, 'down', 0.1],\r\n                left: [4, 7, 'left', 0.1],\r\n                up: [8, 11, 'up', 0.1],\r\n                right: [12, 15, 'right', 0.1],\r\n                dead: [16, 16, 'dead', 0.1]\r\n            }\r\n        });\r\n        this.bmp = new createjs.Sprite(spriteSheet);\r\n\r\n        this.position = position;\r\n        var pixels = Utils.convertToBitmapPosition(position);\r\n        this.bmp.x = pixels.x;\r\n        this.bmp.y = pixels.y;\r\n\r\n        gGameEngine.stage.addChild(this.bmp);\r\n\r\n        this.bombs = [];\r\n        this.setBombsListener();\r\n    },\r\n\r\n    setBombsListener: function() {\r\n\r\n    },\r\n\r\n    update: function() {\r\n        if (!this.alive) {\r\n            //this.fade();\r\n            return;\r\n        }\r\n        if (gGameEngine.menu.visible) {\r\n            return;\r\n        }\r\n        var position = { x: this.bmp.x, y: this.bmp.y };\r\n\r\n        var dirX = 0;\r\n        var dirY = 0;\r\n        if (gInputEngine.actions[this.controls.up]) {\r\n            this.animate('up');\r\n            position.y -= this.velocity;\r\n            dirY = -1;\r\n        } else if (gInputEngine.actions[this.controls.down]) {\r\n            this.animate('down');\r\n            position.y += this.velocity;\r\n            dirY = 1;\r\n        } else if (gInputEngine.actions[this.controls.left]) {\r\n            this.animate('left');\r\n            position.x -= this.velocity;\r\n            dirX = -1;\r\n        } else if (gInputEngine.actions[this.controls.right]) {\r\n            this.animate('right');\r\n            position.x += this.velocity;\r\n            dirX = 1;\r\n        } else {\r\n            this.animate('idle');\r\n        }\r\n\r\n        if (position.x != this.bmp.x || position.y != this.bmp.y) {\r\n            if (!this.detectBombCollision(position)) {\r\n                if (this.detectWallCollision(position)) {\r\n                    // If we are on the corner, move to the aisle\r\n                    var cornerFix = this.getCornerFix(dirX, dirY);\r\n                    if (cornerFix) {\r\n                        var fixX = 0;\r\n                        var fixY = 0;\r\n                        if (dirX) {\r\n                            fixY = (cornerFix.y - this.bmp.y) > 0 ? 1 : -1;\r\n                        } else {\r\n                            fixX = (cornerFix.x - this.bmp.x) > 0 ? 1 : -1;\r\n                        }\r\n                        this.bmp.x += fixX * this.velocity;\r\n                        this.bmp.y += fixY * this.velocity;\r\n                        this.updatePosition();\r\n                    }\r\n                } else {\r\n                    this.bmp.x = position.x;\r\n                    this.bmp.y = position.y;\r\n                    this.updatePosition();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.detectFireCollision()) {\r\n            this.die();\r\n        }\r\n\r\n        this.handleBonusCollision();\r\n    },\r\n\r\n    /**\r\n     * Calculates and updates entity position according to its actual bitmap position\r\n     */\r\n    updatePosition: function() {\r\n        this.position = Utils.convertToEntityPosition(this.bmp);\r\n    },\r\n\r\n    /**\r\n     * Returns true when collision is detected and we should not move to target position.\r\n     */\r\n    detectWallCollision: function(position) {\r\n        var player = {};\r\n        player.left = position.x;\r\n        player.top = position.y;\r\n        player.right = player.left + this.size.w;\r\n        player.bottom = player.top + this.size.h;\r\n\r\n        // Check possible collision with all wall and wood tiles\r\n        var tiles = gGameEngine.tiles;\r\n        for (var i = 0; i < tiles.length; i++) {\r\n            var tilePosition = tiles[i].position;\r\n\r\n            var tile = {};\r\n            tile.left = tilePosition.x * gGameEngine.tileSize + 25;\r\n            tile.top = tilePosition.y * gGameEngine.tileSize + 20;\r\n            tile.right = tile.left + gGameEngine.tileSize - 30;\r\n            tile.bottom = tile.top + gGameEngine.tileSize - 30;\r\n\r\n            if(gGameEngine.intersectRect(player, tile)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Returns true when the bomb collision is detected and we should not move to target position.\r\n     */\r\n    detectBombCollision: function(pixels) {\r\n        var position = Utils.convertToEntityPosition(pixels);\r\n\r\n        for (var i = 0; i < gGameEngine.bombs.length; i++) {\r\n            var bomb = gGameEngine.bombs[i];\r\n            // Compare bomb position\r\n            if (bomb.position.x == position.x && bomb.position.y == position.y) {\r\n                // Allow to escape from bomb that appeared on my field\r\n                if (bomb == this.escapeBomb) {\r\n                    return false;\r\n                } else {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        // I have escaped already\r\n        if (this.escapeBomb) {\r\n            this.escapeBomb = null;\r\n        }\r\n\r\n        return false;\r\n    },\r\n\r\n    detectFireCollision: function() {\r\n        var bombs = gGameEngine.bombs;\r\n        for (var i = 0; i < bombs.length; i++) {\r\n            var bomb = bombs[i];\r\n            for (var j = 0; j < bomb.fires.length; j++) {\r\n                var fire = bomb.fires[j];\r\n                var collision = bomb.exploded && fire.position.x == this.position.x && fire.position.y == this.position.y;\r\n                if (collision) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Checks whether we have got bonus and applies it.\r\n     */\r\n    handleBonusCollision: function() {\r\n        for (var i = 0; i < gGameEngine.bonuses.length; i++) {\r\n            var bonus = gGameEngine.bonuses[i];\r\n            if (Utils.comparePositions(bonus.position, this.position)) {\r\n                this.applyBonus(bonus);\r\n                bonus.destroy();\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Applies bonus.\r\n     */\r\n    applyBonus: function(bonus) {\r\n        if (bonus.type == 'speed') {\r\n            this.velocity += 0.8;\r\n        } else if (bonus.type == 'bomb') {\r\n            this.bombsMax++;\r\n        } else if (bonus.type == 'fire') {\r\n            this.bombStrength++;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Changes animation if requested animation is not already current.\r\n     */\r\n    animate: function(animation) {\r\n        if (!this.bmp.currentAnimation || this.bmp.currentAnimation.indexOf(animation) === -1) {\r\n            this.bmp.gotoAndPlay(animation);\r\n        }\r\n    },\r\n\r\n    die: function() {\r\n        this.alive = false;\r\n\r\n        if (gGameEngine.countPlayersAlive() == 1 && gGameEngine.playersCount == 2) {\r\n            gGameEngine.gameOver('win');\r\n        } else if (gGameEngine.countPlayersAlive() == 0) {\r\n            gGameEngine.gameOver('lose');\r\n        }\r\n\r\n        this.bmp.gotoAndPlay('dead');\r\n        this.fade();\r\n    },\r\n\r\n    fade: function() {\r\n        var timer = 0;\r\n        var bmp = this.bmp;\r\n        var fade = setInterval(function() {\r\n            timer++;\r\n\r\n            if (timer > 30) {\r\n                bmp.alpha -= 0.05;\r\n            }\r\n            if (bmp.alpha <= 0) {\r\n                clearInterval(fade);\r\n            }\r\n\r\n        }, 30);\r\n    }\r\n\r\n});\r\n"
  ]
}